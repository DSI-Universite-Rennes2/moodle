{"version":3,"sources":["../src/participants.js"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Templates","Notification","Ajax","SELECTORS","BULKACTIONSELECT","BULKUSERCHECKBOXES","BULKUSERNOSCHECKBOXES","BULKUSERSELECTEDCHECKBOXES","BULKACTIONFORM","CHECKALLBUTTON","CHECKALLNOSBUTTON","Participants","options","courseId","courseid","contextId","contextid","noteStateNames","stateHelpIcon","attachEventListeners","prototype","modal","on","e","action","target","val","indexOf","preventDefault","ids","each","index","ele","name","attr","id","replace","push","showSendMessage","fail","exception","showSendEmail","showAddNote","prop","length","submit","bind","showallink","data","window","location","users","Deferred","resolve","promise","states","key","value","label","selected","context","stateNames","titlePromise","get_string","when","create","type","types","SAVE_CANCEL","body","render","then","title","setTitle","setSaveButtonText","getRoot","hidden","notification","focus","remove","save","submitAddNote","show","noteText","find","publishState","notes","i","userid","text","publishstate","call","methodname","args","noteIds","msg","addNotification","message","catch","submitSendMessage","messageText","messages","touserid","messageIds","getSendEmailFormBody","setLarge","destroy","shown","append","submitSendEmail","formdata","params","jsonformdata","JSON","stringify","loadFragment","subjectText","carbonCopy","checked","carboncopy","subject","receivers"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Some UI stuff for participants page.\n * This is also used by the report/participants/index.php because it has the same functionality.\n *\n * @module     core_user/participants\n * @package    core_user\n * @copyright  2017 Damyon Wiese\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events',\n        'core/fragment', 'core/templates', 'core/notification', 'core/ajax'],\n        function($, Str, ModalFactory, ModalEvents, Fragment, Templates, Notification, Ajax) {\n\n    var SELECTORS = {\n        BULKACTIONSELECT: \"#formactionid\",\n        BULKUSERCHECKBOXES: \"input.usercheckbox\",\n        BULKUSERNOSCHECKBOXES: \"input.usercheckbox[value='0']\",\n        BULKUSERSELECTEDCHECKBOXES: \"input.usercheckbox:checked\",\n        BULKACTIONFORM: \"#participantsform\",\n        CHECKALLBUTTON: \"#checkall\",\n        CHECKALLNOSBUTTON: \"#checkallnos\"\n    };\n\n    /**\n     * Constructor\n     *\n     * @param {Object} options Object containing options. Contextid is required.\n     * Each call to templates.render gets it's own instance of this class.\n     */\n    var Participants = function(options) {\n\n        this.courseId = options.courseid;\n        this.contextId = options.contextid;\n        this.noteStateNames = options.noteStateNames;\n        this.stateHelpIcon = options.stateHelpIcon;\n\n        this.attachEventListeners();\n    };\n    // Class variables and functions.\n\n    /**\n     * @var {Modal} modal\n     * @private\n     */\n    Participants.prototype.modal = null;\n\n    /**\n     * @var {int} courseId\n     * @private\n     */\n    Participants.prototype.courseId = -1;\n\n    /**\n     * @var {Object} noteStateNames\n     * @private\n     */\n    Participants.prototype.noteStateNames = {};\n\n    /**\n     * @var {String} stateHelpIcon\n     * @private\n     */\n    Participants.prototype.stateHelpIcon = \"\";\n\n    /**\n     * Private method\n     *\n     * @method attachEventListeners\n     * @private\n     */\n    Participants.prototype.attachEventListeners = function() {\n        $(SELECTORS.BULKACTIONSELECT).on('change', function(e) {\n            var action = $(e.target).val();\n            if (action.indexOf('#') !== -1) {\n                e.preventDefault();\n\n                var ids = [];\n                $(SELECTORS.BULKUSERSELECTEDCHECKBOXES).each(function(index, ele) {\n                    var name = $(ele).attr('name');\n                    var id = name.replace('user', '');\n                    ids.push(id);\n                });\n\n                if (action == '#messageselect') {\n                    this.showSendMessage(ids).fail(Notification.exception);\n                } else if (action == '#emailselect') {\n                    this.showSendEmail(ids).fail(Notification.exception);\n                } else if (action == '#addgroupnote') {\n                    this.showAddNote(ids).fail(Notification.exception);\n                }\n                $(SELECTORS.BULKACTIONSELECT + ' option[value=\"\"]').prop('selected', 'selected');\n            } else if (action !== '') {\n                if ($(SELECTORS.BULKUSERSELECTEDCHECKBOXES).length > 0) {\n                    $(SELECTORS.BULKACTIONFORM).submit();\n                } else {\n                    $(SELECTORS.BULKACTIONSELECT + ' option[value=\"\"]').prop('selected', 'selected');\n                }\n            }\n        }.bind(this));\n\n        $(SELECTORS.CHECKALLBUTTON).on('click', function() {\n            var showallink = $(this).data('showallink');\n            if (showallink) {\n                window.location = showallink;\n            }\n        });\n\n        $(SELECTORS.CHECKALLNOSBUTTON).on('click', function() {\n            $(SELECTORS.BULKUSERNOSCHECKBOXES).prop('checked', true);\n        });\n    };\n\n    /**\n     * Show the add note popup\n     *\n     * @method showAddNote\n     * @private\n     * @param {int[]} users\n     * @return {Promise}\n     */\n    Participants.prototype.showAddNote = function(users) {\n\n        if (users.length == 0) {\n            // Nothing to do.\n            return $.Deferred().resolve().promise();\n        }\n\n        var states = [];\n        for (var key in this.noteStateNames) {\n            switch (key) {\n                case 'draft':\n                    states.push({value: 'personal', label: this.noteStateNames[key]});\n                    break;\n                case 'public':\n                    states.push({value: 'course', label: this.noteStateNames[key], selected: 1});\n                    break;\n                case 'site':\n                    states.push({value: key, label: this.noteStateNames[key]});\n                    break;\n            }\n        }\n\n        var context = {stateNames: states, stateHelpIcon: this.stateHelpIcon};\n        var titlePromise = null;\n        if (users.length == 1) {\n            titlePromise = Str.get_string('addbulknotesingle', 'core_notes');\n        } else {\n            titlePromise = Str.get_string('addbulknote', 'core_notes', users.length);\n        }\n\n        return $.when(\n            ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: Templates.render('core_user/add_bulk_note', context)\n            }),\n            titlePromise\n        ).then(function(modal, title) {\n            // Keep a reference to the modal.\n            this.modal = modal;\n            this.modal.setTitle(title);\n            this.modal.setSaveButtonText(title);\n\n            // We want to focus on the action select when the dialog is closed.\n            this.modal.getRoot().on(ModalEvents.hidden, function() {\n                var notification = $('#user-notifications [role=alert]');\n                if (notification.length) {\n                    notification.focus();\n                } else {\n                    $(SELECTORS.BULKACTIONSELECT).focus();\n                }\n                this.modal.getRoot().remove();\n            }.bind(this));\n\n            this.modal.getRoot().on(ModalEvents.save, this.submitAddNote.bind(this, users));\n\n            this.modal.show();\n\n            return this.modal;\n        }.bind(this));\n    };\n\n    /**\n     * Add a note to this list of users.\n     *\n     * @method submitAddNote\n     * @private\n     * @param {int[]} users\n     * @return {Promise}\n     */\n    Participants.prototype.submitAddNote = function(users) {\n        var noteText = this.modal.getRoot().find('form textarea').val();\n        var publishState = this.modal.getRoot().find('form select').val();\n        var notes = [],\n            i = 0;\n\n        for (i = 0; i < users.length; i++) {\n            notes.push({userid: users[i], text: noteText, courseid: this.courseId, publishstate: publishState});\n        }\n\n        return Ajax.call([{\n            methodname: 'core_notes_create_notes',\n            args: {notes: notes}\n        }])[0].then(function(noteIds) {\n            if (noteIds.length == 1) {\n                return Str.get_string('addbulknotedonesingle', 'core_notes');\n            } else {\n                return Str.get_string('addbulknotedone', 'core_notes', noteIds.length);\n            }\n        }).then(function(msg) {\n            Notification.addNotification({\n                message: msg,\n                type: \"success\"\n            });\n            return true;\n        }).catch(Notification.exception);\n    };\n\n    /**\n     * Show the send message popup.\n     *\n     * @method showSendMessage\n     * @private\n     * @param {int[]} users\n     * @return {Promise}\n     */\n    Participants.prototype.showSendMessage = function(users) {\n\n        if (users.length == 0) {\n            // Nothing to do.\n            return $.Deferred().resolve().promise();\n        }\n\n        var titlePromise = null;\n        if (users.length == 1) {\n            titlePromise = Str.get_string('sendbulkmessagesingle', 'core_message');\n        } else {\n            titlePromise = Str.get_string('sendbulkmessage', 'core_message', users.length);\n        }\n\n        return $.when(\n            ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: Templates.render('core_user/send_bulk_message', {})\n            }),\n            titlePromise\n        ).then(function(modal, title) {\n            // Keep a reference to the modal.\n            this.modal = modal;\n\n            this.modal.setTitle(title);\n            this.modal.setSaveButtonText(title);\n\n            // We want to focus on the action select when the dialog is closed.\n            this.modal.getRoot().on(ModalEvents.hidden, function() {\n                $(SELECTORS.BULKACTIONSELECT).focus();\n                this.modal.getRoot().remove();\n            }.bind(this));\n\n            this.modal.getRoot().on(ModalEvents.save, this.submitSendMessage.bind(this, users));\n\n            this.modal.show();\n\n            return this.modal;\n        }.bind(this));\n    };\n\n    /**\n     * Send a message to these users.\n     *\n     * @method submitSendMessage\n     * @private\n     * @param {int[]} users\n     * @param {Event} e Form submission event.\n     * @return {Promise}\n     */\n    Participants.prototype.submitSendMessage = function(users) {\n\n        var messageText = this.modal.getRoot().find('form textarea').val();\n\n        var messages = [],\n            i = 0;\n\n        for (i = 0; i < users.length; i++) {\n            messages.push({touserid: users[i], text: messageText});\n        }\n\n        return Ajax.call([{\n            methodname: 'core_message_send_instant_messages',\n            args: {messages: messages}\n        }])[0].then(function(messageIds) {\n            if (messageIds.length == 1) {\n                return Str.get_string('sendbulkmessagesentsingle', 'core_message');\n            } else {\n                return Str.get_string('sendbulkmessagesent', 'core_message', messageIds.length);\n            }\n        }).then(function(msg) {\n            Notification.addNotification({\n                message: msg,\n                type: \"success\"\n            });\n            return true;\n        }).catch(Notification.exception);\n    };\n\n    /**\n     * Show the send email popup.\n     *\n     * @method showSendEmail\n     * @private\n     * @param {int[]} users\n     * @return {Promise}\n     */\n    Participants.prototype.showSendEmail = function(users) {\n\n        if (users.length == 0) {\n            // Nothing to do.\n            return $.Deferred().resolve().promise();\n        }\n\n        var titlePromise = null;\n        if (users.length == 1) {\n            titlePromise = Str.get_string('sendbulkemailsingle', 'core_message');\n        } else {\n            titlePromise = Str.get_string('sendbulkemail', 'core_message', users.length);\n        }\n\n        return $.when(\n            ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                body: this.getSendEmailFormBody()\n            }),\n            titlePromise\n        ).then(function(modal, title) {\n            // Keep a reference to the modal.\n            this.modal = modal;\n\n            this.modal.setTitle(title);\n            this.modal.setSaveButtonText(title);\n\n            // Forms are big, we want a big modal.\n            this.modal.setLarge();\n\n            // We want to reset the form every time it is opened.\n            this.modal.getRoot().on(ModalEvents.hidden, function() {\n                this.modal.destroy();\n            }.bind(this));\n\n            // We want to hide the submit buttons every time it is opened.\n            this.modal.getRoot().on(ModalEvents.shown, function() {\n                this.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n            }.bind(this));\n\n            // We catch the modal save event, and use it to submit the form inside the modal.\n            // Triggering a form submission will give JS validation scripts a chance to check for errors.\n            this.modal.getRoot().on(ModalEvents.save, this.submitSendEmail.bind(this, users));\n\n            this.modal.show();\n\n            return this.modal;\n        }.bind(this));\n    };\n\n    /**\n     * @method getSendEmailFormBody\n     * @private\n     * @param {Object} formdata Contains data from form.\n     * @return {Promise}\n     */\n    Participants.prototype.getSendEmailFormBody = function(formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n\n        // Get the content of the modal.\n        var params = {jsonformdata: JSON.stringify(formdata)};\n        return Fragment.loadFragment('core_user', 'send_email_form', this.contextId, params);\n    };\n\n    /**\n     * Send an email to these users.\n     *\n     * @method submitSendEmail\n     * @private\n     * @param {int[]} users\n     * @param {Event} e Form submission event.\n     * @return {Promise}\n     */\n    Participants.prototype.submitSendEmail = function(users) {\n\n        var subjectText = this.modal.getRoot().find('form input[name=\"subject\"]').val();\n        var carbonCopy = this.modal.getRoot().find('form input[name=\"carboncopy\"][type=\"checkbox\"]')[0].checked;\n        var messageText = this.modal.getRoot().find('form textarea').val();\n\n        var message = {carboncopy: carbonCopy, subject: subjectText, text: messageText, receivers: users};\n\n        return Ajax.call([{\n            methodname: 'core_message_send_instant_emails',\n            args: {messages: [message]}\n        }])[0].then(function(messageIds) {\n            if (messageIds.length == 1) {\n                return Str.get_string('sendbulkemailsentsingle', 'core_message');\n            } else {\n                return Str.get_string('sendbulkemailsent', 'core_message', messageIds.length);\n            }\n        }).then(function(msg) {\n            Notification.addNotification({\n                message: msg,\n                type: \"success\"\n            });\n            return true;\n        }).catch(Notification.exception);\n    };\n\n    return /** @alias module:core_user/participants */ {\n        // Public variables and functions.\n\n        /**\n         * Initialise the unified user filter.\n         *\n         * @method init\n         * @param {Object} options - List of options.\n         * @return {Participants}\n         */\n        'init': function(options) {\n            return new Participants(options);\n        }\n    };\n});\n"],"file":"participants.min.js"}